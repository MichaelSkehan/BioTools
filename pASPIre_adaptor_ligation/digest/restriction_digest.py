from Bio.Restriction import *
from Bio.Seq import Seq



def extract_target_seq(seq):
    rb = NcoI + SacI
    analysis = Analysis(rb, test_seq, linear=False)
    cut_map = analysis.full()

    cut_sites = []

    for re, loc in cut_map.items():
        cut_sites.extend(loc)

    cut_pos = (sorted(set(cut_sites)))
    print(cut_pos)

    fragments = []
    for i in range(len(cut_pos) - 1):
        start = cut_pos[i]
        end = cut_pos[(i+1)]

        fragments.append(seq[start:end])

    for frag in fragments:
        if len(frag) == 144:
            fragments.remove(frag)

    return fragments

if __name__ == '__main__':
    test_seq = Seq(
        "CCCGCCGCATCCATACCGCCAGTTGTTTACCCTCACAACGTTCCAGTAACCGGGCATGTTCATCATCAGTAACCCGTATCGTGAGCATCCTCTCTCGTTTCATCGGTATCATTACCCCCATGAACAGAAATCCCCCTTACACGGAGGCATCAGTGACCAAACAGGAAAAAACCGCCCTTAACATGGCCCGCTTTATCAGAAGCCAGACATTAACGCTTCTGGAGAAACTCAACGAGCTGGACGCGGATGAACAGGCAGACATCTGTGAAAGCCTTCACGACCACGCTGATGAGCTTTACCGCAGCTGCCTCGCGCGTTTCGGTGATGACGGTGAAAACCTCTGACACATGCAGCTCCCGGAGACGGTCACAGCTTGTCTGTAAGCGGATGCCGGGAGCAGACAAGCCCGTCAGGGCGCGTCAGCGGGTGTTGGCGGGTGTCGGGGCGCAGCCATGACCCAGTCACGTAGCGATAGCGGAGTGTATACTGGCTTAACTATGCGGCATCAGAGCAGATTGTACTGAGAGTGCACCATTGCGGTGTGAAATACCGCACAGATGCGTAAGGAGAAAATACCGCATCAGGCGCTCTTCCGCTTCCTCGCTCACTGACTCGCTGCGCTCGGTCGTTCGGCTGCGGCGAGCGGTATCAGCTCACTCAAAGGCGGTAATACGGTTATCCACAGAATCAGGGGATAACGCAGGAAAGAACATGTGAGCAAAAGGCCAGCAAAAGGCCAGGAACCGTAAAAAGGCCGCGTTGCTGGCGTTTTTCCATAGGCTCCGCCCCCCTGACGAGCATCACAAAAATCGACGCTCAAGTCAGAGGTGGCGAAACCCGACAGGACTATAAAGATACCAGGCGTTTCCCCCTGGAAGCTCCCTCGTGCGCTCTCCTGTTCCGACCCTGCCGCTTACCGGATACCTGTCCGCCTTTCTCCCTTCGGGAAGCGTGGCGCTTTCTCATAGCTCACGCTGTAGGTATCTCAGTTCGGTGTAGGTCGTTCGCTCCAAGCTGGGCTGTGTGCACGAACCCCCCGTTCAGCCCGACCGCTGCGCCTTATCCGGTAACTATCGTCTTGAGTCCAACCCGGTAAGACACGACTTATCGCCACTGGCAGCAGCCACTGGTAACAGGATTAGCAGAGCGAGGTATGTAGGCGGTGCTACAGAGTTCTTGAAGTGGTGGCCTAACTACGGCTACACTAGAAGGACAGTATTTGGTATCTGCGCTCTGCTGAAGCCAGTTACCTTCGGAAAAAGAGTTGGTAGCTCTTGATCCGGCAAACAAACCACCGCTGGTAGCGGTGGTTTTTTTGTTTGCAAGCAGCAGATTACGCGCAGAAAAAAAGGATCTCAAGAAGATCCTTTGATCTTTTCTACGGGGccggcctacggccagcctcgcagagcaggattcccgttgagcaccgccaggtgcgaataagggacagtgaagaaggaacacccgctcgcgggtgggcctacttcacctatcctgcccggctgacgccgttggatacaccaaggaaagtctacacgaaccctttggcaaaatcctgtatatcgtgcgaaaaaggatggatataccgaaaaaatcgctataatgaccccgaagcagggttatgcagcggaaaaggacaacgcgcggaccgcggtccaattaattattagaaaaattcatccagcatcagatgaaattgcagtttgttcatatccggattatcaatgccatatttctgaaacagacgtttttgcaggctcgggctaaattcgcccaggcagttccacagaatggccagatcctgataacgatccgcaatgcccacacggcccacatcaatgcagccaatcagtttgccttcatcgaaaatcaggttatccaggctaaaatcgccgtgggtcaccacgctatccgggctaaacggcagcagtttatgcatttctttccacacctgttccaccggccagccgttacgttcatcatcaaaatcgctcgcatccaccaggccgttgttcatacggctctgcgcctgggccagacgaaacacacgatcgctgttaaacgggcagttgcacaccggaatgctatgcagacgacgcagaaacacggccagcgcatccacaatgttttcgccgctatccggatattcttccagcacctgaaacgcggttttgcccggaatcgcggtggtcagcagccacgcatcatccggggtgcgaataaaatgtttaatggtcggcagcggcataaattcggtcagccagttcagacgcaccatttcatcggtcacatcgttcgccacgctgcctttgccatgtttcagaaacagttccggcgcatccggtttgccatacagacgataaatggtcgcgccgctctgacccacgttatcacgcgcccatttatagccatacagatccgcatccatgttgctgttcagacgcggacggctacagctcgtttcacgctgaatatggctcataacaccccttgtattactgtttatgtaagcagacagttttattgttcatgatgatatatttttatcttgtgcaatgtaacatcagagattttgagacacaaatttaaatcgtaattattggggacccctggattctcaccaataaaaaacgcccggcggcaaccgagcgttctgaacaaatccagatggagttctgaggtcattactggatctatcaacaggagtccaagaagcttcacatctgcagtaatcggccggcttgtcgacgacggcggtctccgtcgtcaggatcatccgggcccatggatcgcttagtcacctttgggccacggtccgctaccttacaggaatagtactcgtcctttaatttcccttgcatatatgttgcgtttcttcgacctagtactcgctcccttaggagaaagacagatagcttcttacccgccatgggggtttgtaccgtacaccactgagaccgcggtggttgaccagacaaaccacgaaggttctgttaagtaactgaacccaatgtcgttagtgacgcttacctcttaagaggtcactgacctaacaggatcccaccacaattcagcaaattgtgaacatcatcacgttcatctttccctggttgccaatggcccattttcctgtcagtaacgagaaggtcgcgaattcaggcgctttttagactggtcgtagcaacaaaatcaggcacaggcagaacaacaatgatcaaggcgacggacagaaaactgGGTGGAGGCGGTTCTgaaaatttatacttccaatccGGAGGTGGAGGCTCTCGAGCTctggttgttattcgtctgagccgtgttaccgatgcaaccaccagtccggaacgtcagctggaaagctgtcagcagctgtgtgcacagcgtggttgggatgttgttggtgttgcagaggatctggatgttagcggtgcagttgatccgtttgatcgtaaacgtcgtccgaatctggcacgttggctggcatttgaagaacagccgtttgatgttattgttgcctatcgtgttgatcgtctgacccgtagcattcgtcatctgcaacagctggttcattgggcagaagatcataaaaaactggttgtgagcgcaaccgaagcacattttgataccaccaccccgtttgcagcagttgttattgcactgatgggcaccgttgcacagatggaactggaagcaattaaagaacgtaatcgtagcgcagcccattttaacattcgtgcaggtaaatatcgtggtagcctgcctccgtggggttatctgccgacgcgtgtagatggtgaatggcgtctggttcctgacccggttcagcgtgaacgtattctggaagtatatcatcgtgtggtggataatcatgaaccgctgcatctggttgcacatgatctgaatcgtcgtggtgttctgagtcccaaagattattttgctcagctgcaaggtcgtgaaccgcagggtcgtgaatggtctgcaaccgcactgaaacgtagcatgattagcgaagcaatgctgggttatgcaaccctgaatggtaaaaccgttcgtgatgatgatggtgcaccgctggttcgtgcagaaccgattctgacacgtgaacagctggaagcactgcgtgccgaactggttaaaaccagccgtgcaaaaccggcagttagcaccccgagcctgctgctgcgtgttctgttttgtgcagtttgtggtgaaccggcatacaaatttgccggtggtggtcgtaaacatccgcgttatcgttgtcgtagcatgggttttccgaaacattgtggtaatggtacagttgcaatggcagaatgggatgcattttgcgaagaacaggttctggatctgctgggtgatgccgaacgtctggaaaaagtttgggttgcaggtagcgatagcgcagttgaactggccgaagttaatgcggaactggtcgatctcaccagtctgattggaagtcccgcatatcgtgcgggtagtcctcagcgtgaagcactggatgcacgtattgcagcactggcagcacgtcaagaagaactggaaggtctggaagcacgtccgagcggttgggaatggcgtgaaacaggtcagcgttttggtgattggtggcgtgagcaggataccgcagcaaaaaatacctggctgcgtagtatgaatgttcgcctgacctttgatgttcgcggtggcctgacccgcaccattgattttggcgatctgcaagaatatgaacagcatctgcgtctgggtagcgttgttgaacgtctgcataccggcatgagcaccggcggtggcagcggcggttctggtggctctagcaaaggagaagaacttttcactggagttgtcccaattcttgttgaattagatggtgatgttaatgggcacaaattttctgtccgtggagagggtgaaggtgatgctacaaacggaaaactcacccttaaatttatttgcactactggaaaactacctgttccgtggccaacacttgtcactactctgacctatggtgttcaatgcttttcccgttatccggatcacatgaaacggcatgactttttcaagagtgccatgcccgaaggttatgtacaggaacgcactatatctttcaaagatgacgggacctacaagacgcgtgctgaagtcaagtttgaaggtgatacccttgttaatcgtatcgagttaaagggtattgattttaaagaagatggaaacattcttggacacaaactcgagtacaactttaactcacacaatgtatacatcacggcagacaaacaaaagaatggaatcaaagctaacttcaaaattcgccacaacgttgaagatggttccgttcaactagcagaccattatcaacaaaatactccaattggcgatggccctgtccttttaccagacaaccattacctgtcgacacaatctgtcctttcgaaagatcccaacgaaaagcgtgaccacatggtccttcttgagtttgtaactgctgctgggattacacatggcatggatgaactctacaaaaggcctgctgctaacgacgaaaactacgctctggctgcttaataagcggccgcggcctaggcggcctcctgtgtgaaattgttatccgctttaattaaaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctcctgagtaggacaaatccgccgccctagacagctgggcgcgcc")
    frags = extract_target_seq(test_seq)
    for seq in frags:
        print(len(seq))
        print (seq)
